# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:lts

    # working_directory: ~/vue-mastery

    steps:
      - checkout

      - run:
          name: Add environment variables
          command: |
            echo "env=$ENV" >> .env
            echo "apiKey=$APIKEY" >> .env
            echo "authDomain=$AUTHDOMAIN" >> .env
            echo "databaseURL=$DATABASEURL" >> .env
            echo "projectId=$PROJECTID" >> .env
            echo "storageBucket=$STORAGEBUCKET" >> .env
            echo "messagingSenderId=$MESSAGINGSENDERID" >> .env
            echo "baseUrl=$BASEURL" >> .env
            echo "cloudfunctions=$CLOUDFUNCTIONS" >> .env
            echo "chargebeeSite=$CHARGEBEESITE" >> .env
            echo "chargebeeKey=$CHARGEBEEKEY" >> .env
            echo "algoliaAppId=$ALGOLIAAPPID" >> .env
            echo "algoliaApiKey=$ALGOLIAAPIKEY" >> .env
            echo "privateKeyId=$PRIVATEKEYID" >> .env
            echo "privateKey=$PRIVATEKEY" >> .env
            echo "clientEmail=$CLIENTEMAIL" >> .env
            echo "clientId=$CLIENTID" >> .env
            echo "authUri=$AUTHURI" >> .env
            echo "tokenUri=$TOKENURI" >> .env
            echo "authProviderX509CertUrl=$AUTHPROVIDERX509CERTURL" >> .env
            echo "clientX509CertUrl=$CLIENTX509CERTURL" >> .env

      # Download and cache dependencies
      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}

      - run:
          name: Install dependences
          command: yarn install


      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules

      # run tests!
      # - run: yarn test

      - run:
          name: Build
          command: npm run generate
          paths:
              - ./

      - hold:
          type: approval

      - run:
          name: Firebase Deploy
          command: ./node_modules/.bin/firebase deploy --token "$FIREBASETOKEN" --only hosting
          requires:
              - hold
